{"ast":null,"code":"import axios from \"axios\";\nimport NotFoundPage from \"./NotFoundPage.vue\";\nimport NavBar from \"../pages/NavBar.vue\";\nimport BaseDialog from \"../UI/BaseDialog.vue\";\nexport default {\n  props: [\"products\"],\n  data() {\n    return {\n      product: {},\n      cartItems: [],\n      message: null\n    };\n  },\n  components: {\n    NotFoundPage,\n    NavBar,\n    BaseDialog\n  },\n  methods: {\n    async addToCart() {\n      await axios.post(\"/api/users/12345/cart\", {\n        id: this.$route.params.productId\n      });\n      this.message = \"Successfully added item to the Cart!\";\n    },\n    handleError() {\n      this.message = null;\n    }\n  },\n  async created() {\n    const response = await axios.get(`/api/product/${this.$route.params.productId}`);\n    const product = response.data;\n    this.product = product;\n  }\n};","map":{"version":3,"names":["axios","NotFoundPage","NavBar","BaseDialog","props","data","product","cartItems","message","components","methods","addToCart","post","id","$route","params","productId","handleError","created","response","get"],"sources":["/Users/priyanshuprajapati/Documents/FULLSTACK_PROJECT/src/pages/ProductDetailPage.vue"],"sourcesContent":["<template>\n  <base-dialog :show=\"!!message\" title=\"Shopping Cart\" @close=\"handleError\">\n    <p>{{ message }}</p>\n  </base-dialog>\n  <nav-bar></nav-bar>\n  <div v-if=\"product\" class=\"mt-4 border-t-2 border-black\">\n    <div class=\"flex justify-center items-center mt-6 text-center\">\n      <img class=\"w-1/3\" :src=\"product.imageUrl\" alt=\"\" />\n    </div>\n    <div class=\"p-3 mt-6\">\n      <div class=\"flex flex-1 justify-between border-b-2 border-black mb-4\">\n        <h1 class=\"text-2xl font-bold\">{{ product.name }}</h1>\n        <h3 class=\"font-medium\">$ {{ product.price }}</h3>\n      </div>\n      <button\n        @click=\"addToCart\"\n        class=\"w-full text-center rounded-xl bg-black text-white p-3 mb-3 hover:bg-gray-800\"\n      >\n        Add To Cart\n      </button>\n      <!-- <button\n        class=\"w-full text-center rounded-xl bg-gray-700 text-white p-3\"\n        v-if=\"user && itemIsInCart\"\n      >\n        Already in Cart\n      </button > -->\n    </div>\n  </div>\n\n  <div v-else>\n    <not-found-page></not-found-page>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport NotFoundPage from \"./NotFoundPage.vue\";\nimport NavBar from \"../pages/NavBar.vue\";\nimport BaseDialog from \"../UI/BaseDialog.vue\";\n\nexport default {\n  props: [\"products\"],\n  data() {\n    return {\n      product: {},\n      cartItems: [],\n      message: null,\n    };\n  },\n  components: {\n    NotFoundPage,\n    NavBar,\n    BaseDialog,\n  },\n  methods: {\n    async addToCart() {\n      await axios.post(\"/api/users/12345/cart\", {\n        id: this.$route.params.productId,\n      });\n      this.message = \"Successfully added item to the Cart!\";\n    },\n    handleError() {\n      this.message = null;\n    },\n  },\n  async created() {\n    const response = await axios.get(\n      `/api/product/${this.$route.params.productId}`\n    );\n    const product = response.data;\n    this.product = product;\n  },\n};\n</script>"],"mappings":"AAmCA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,YAAW,MAAO,oBAAoB;AAC7C,OAAOC,MAAK,MAAO,qBAAqB;AACxC,OAAOC,UAAS,MAAO,sBAAsB;AAE7C,eAAe;EACbC,KAAK,EAAE,CAAC,UAAU,CAAC;EACnBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,CAAC,CAAC;MACXC,SAAS,EAAE,EAAE;MACbC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,UAAU,EAAE;IACVR,YAAY;IACZC,MAAM;IACNC;EACF,CAAC;EACDO,OAAO,EAAE;IACP,MAAMC,SAASA,CAAA,EAAG;MAChB,MAAMX,KAAK,CAACY,IAAI,CAAC,uBAAuB,EAAE;QACxCC,EAAE,EAAE,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC;MACzB,CAAC,CAAC;MACF,IAAI,CAACR,OAAM,GAAI,sCAAsC;IACvD,CAAC;IACDS,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACT,OAAM,GAAI,IAAI;IACrB;EACF,CAAC;EACD,MAAMU,OAAOA,CAAA,EAAG;IACd,MAAMC,QAAO,GAAI,MAAMnB,KAAK,CAACoB,GAAG,CAC7B,gBAAe,IAAI,CAACN,MAAM,CAACC,MAAM,CAACC,SAAU,EAC/C,CAAC;IACD,MAAMV,OAAM,GAAIa,QAAQ,CAACd,IAAI;IAC7B,IAAI,CAACC,OAAM,GAAIA,OAAO;EACxB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}